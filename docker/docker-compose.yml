version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: order_management_db
    environment:
      POSTGRES_DB: order_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  # API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order_management_api
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/order_management
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin123
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma db seed &&
        node dist/app.js
      "

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: order_management_redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge

